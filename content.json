{"meta":{"title":"孤狼博客","subtitle":"生命不息，折腾不止","description":"生命不息，折腾不止","author":"Eric","url":"http://lonewolferic.github.io"},"pages":[{"title":"About Me","date":"2018-09-02T06:50:46.000Z","updated":"2018-09-02T14:47:02.227Z","comments":true,"path":"about/index.html","permalink":"http://lonewolferic.github.io/about/index.html","excerpt":"","text":"四川大学某菜鸡工科狗 会一点点嵌入式，会一点点电路，会一点点python，会一点点linux 写不出代码，de不出bug，转不动电机 喜欢搞机，喜欢造人工智障 热爱健身，喜爱摄影 想学很多东西，以前觉得读到双博士才能学完想学的，现在发现自己的智商根本不配读大学 直男癌晚期，没救了 有的时候会有很多奇妙的想法，但……就是因为自己太菜了实现不了 唔……反正就是很菜 联系方式：871855626@qq.com"},{"title":"","date":"2018-09-02T08:31:04.231Z","updated":"2018-09-02T08:20:47.797Z","comments":true,"path":"img/pexels/README.html","permalink":"http://lonewolferic.github.io/img/pexels/README.html","excerpt":"","text":"Pexels pictures License https://www.pexels.com/photo-license/ It’s hard to understand complex licenses that is why all photos on Pexels are licensed under the Creative Commons Zero (CC0) license. This means the pictures are completely free to be used for any legal purpose. The pictures are free for personal and even for commercial use. You can modify, copy and distribute the photos. All without asking for permission or setting a link to the source. So, attribution is not required. The only restriction is that identifiable people may not appear in a bad light or in a way that they may find offensive, unless they give their consent. You should also make sure the depicted content (people, logos, private property, etc.) is suitable for your application and doesn’t infringe any rights. The CC0 license was released by the non-profit organization Creative Commons (CC). Get more information about Creative Commons images and the license on the official license page. CC0 1.0 UniversalOfficial translations of this legal tool are available in other languages. CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN &quot;AS-IS&quot; BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER. Statement of Purpose The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an “owner”) of an original work of authorship and/or a database (each, a “Work”). Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (“Commons”) that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others. For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the “Affirmer”), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (“Copyright and Related Rights”). Copyright and Related Rights include, but are not limited to, the following: the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work; moral rights retained by the original author(s) and/or performer(s); publicity and privacy rights pertaining to a person’s image or likeness depicted in a Work; rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below; rights protecting the extraction, dissemination, use and reuse of data in a Work; database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer’s Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “Waiver”). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer’s heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer’s express Statement of Purpose. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer’s express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer’s Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “License”). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer’s express Statement of Purpose. Limitations and Disclaimers. No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document. Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law. Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person’s Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work. Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work."}],"posts":[{"title":"康熙怒斥学生会","slug":"KangXi-angered-Student-Union","date":"2018-11-10T16:00:00.000Z","updated":"2018-11-11T08:14:07.780Z","comments":true,"path":"2018/11/11/KangXi-angered-Student-Union/","link":"","permalink":"http://lonewolferic.github.io/2018/11/11/KangXi-angered-Student-Union/","excerpt":"","text":"当朝副主席，统共有五位，朕不得不罢免一位，六位部长，朕不得不罢免三位。看看这四个人吧，哪个不受学生爱戴，哪个不受老师信任，哪个不是川大的优秀榜样。他们烂了，朕心要碎了。祖宗把川大交到朕的手里，却搞成了这个样子，朕是痛心疾首，朕有罪于国家，愧对祖宗，愧对天地，朕恨不得自己罢免了自己！还有你们，虽然各个冠冕堂皇站在干岸上，你们，就那么干净吗？朕知道，你们有的人比这四个人更腐败！朕劝你们一句，都把自己的心肺肠子翻出来晒一晒洗一洗拾掇拾掇！ 朕刚即位的时候以为大川最大的敌人是名气，提了名气；以为最大的敌人是科研经费，朕有了科研经费；出国支持又成了大川的心头之患，朕，有了支持；学科评估又成了大川的心头之患。朕现在是越来越清楚了，大川的心头之患不在外边，而是官僚腐败。就是这个学生会！就在朕的学长学姐和部长主席们当中。 咱们这烂一点，大川大就烂一片！你们要是全烂了，川大各地就会揭竿而起，让咱们死无葬身之地呀！想想吧，四川大学研究生会联名倡议《学生会、研究生会干部自律公约》才几天呢，忘啦！？那份自律公约还蜷缩在垃圾桶里天天地盯着你们哪！ 朕已经三天三夜没有合眼了，老想着和干部们说些什么，可是话总得有个头哇，想来想去只有四个字（升起正大光明匾）。这四个字，说说容易呀，身体力行又何其难？这四个字，朕是从心里刨出来的，从血海里挖出来的。记着，从今日起，学生会改为正大光明会！好好看看，你们都抬起头来好好看看，想想自己，给朕看一辈子！","categories":[{"name":"Life","slug":"Life","permalink":"http://lonewolferic.github.io/categories/Life/"}],"tags":[{"name":"评论","slug":"评论","permalink":"http://lonewolferic.github.io/tags/评论/"},{"name":"学生会","slug":"学生会","permalink":"http://lonewolferic.github.io/tags/学生会/"}]},{"title":"LaTeX交叉引用&浮动体","slug":"LaTeX-floats","date":"2018-10-30T16:00:00.000Z","updated":"2018-10-31T09:18:29.790Z","comments":true,"path":"2018/10/31/LaTeX-floats/","link":"","permalink":"http://lonewolferic.github.io/2018/10/31/LaTeX-floats/","excerpt":"","text":"交叉引用 在书本中，我们都会看到： 由公式(3)可知，balabalabala，作图结果如图8所示。 当时惊艳于排版的人竟然有这等毅力给每个公式标号，还写是那个公式的号码。要是是我就写：如下面的公式所示，balabalabala。 现在学了$\\LaTeX$之后，知道了这都是交叉引用的功劳。 代码： 1234567首先观察这里的图 \\ref&#123;fig:raw&#125;，肉眼可以发现左下角有一个残缺，在下方有一个更微小的残缺。\\begin&#123;figure&#125;[!hbtp] \\centering \\includegraphics[width=2.8in]&#123;../result/raw.png&#125; \\caption&#123;原图&#125;\\label&#123;fig:raw&#125;\\end&#123;figure&#125; 交叉引用的方式主要是使用\\label{}、\\ref{}和\\pageref{}。\\label{}给图片公式贴上标签，$\\LaTeX$在编译的时候自动给予编号，\\ref{}自动会被替换成和标签内容一样的图表公式的编号。\\pageref{}会被替换图表公式所在的页码。四不四很棒！相比手动输入的方式，在之后编辑文档的时候如果突然插入或者产出一个公式，我们对于公式的标号并不需要手动更改，因为标签依然没变，$\\LaTeX$会帮我们自动编号。 浮动体 $\\LaTeX$一个强大的功能就是它的浮动体排版功能（然而我因为太菜了并不能体会到它的强大）。 刚开始的时候，很不习惯浮动体把我的图片乱排版，觉得表格应该直接放在图片后面。当拍了大量图片公式的文章之后，发现了浮动体的好还有自己对于科技文献排版的无知。 浮动体的哲学：文字应该和文字在一起，图片表格应该和图片表格在一起。大段的文字中间不应该随意突然出现图片，同样的，大量的图片中间不应该随意突然出现小段文字。 有的时候，表格和图片对于排版的分页也会造成很大的麻烦。所以，为了文字和图片表格的美观和排版分页的美观，避免不合理的分页或者大块的空白。我们需要将大块的内容移至别的地方。 在 $\\LaTeX$ 中，默认有figure 和 table 两种浮动体，分别用于图片和表格。 主要的选项有！h t b p，分别对应功能： ! 表示忽略一些严格的限制条件 h 表示如有可能，则放在当前位置 t 表示该浮动体允许置于栏的顶部 b 表示该浮动体允许置于栏的底部 p 表示该浮动体允许置于浮动栏或浮动页 效果： 可以明显看出，不使用浮动体自动排序导致三张图片中间多了一句很小的话，不符合科技文献的排版美学和$\\LaTeX$的美观哲学。 更加详细的介绍可以去看本博客的参考文档： 浮动体：基础篇 浮动体：处理超宽问题 浮动体：浮动算法 在 LaTeX 中使用交叉引用 lshort","categories":[{"name":"Others","slug":"Others","permalink":"http://lonewolferic.github.io/categories/Others/"}],"tags":[{"name":"latex","slug":"latex","permalink":"http://lonewolferic.github.io/tags/latex/"},{"name":"排版","slug":"排版","permalink":"http://lonewolferic.github.io/tags/排版/"},{"name":"论文","slug":"论文","permalink":"http://lonewolferic.github.io/tags/论文/"}]},{"title":"版权呢?","slug":"Copyright","date":"2018-10-27T16:00:00.000Z","updated":"2018-12-05T04:45:31.183Z","comments":true,"path":"2018/10/28/Copyright/","link":"","permalink":"http://lonewolferic.github.io/2018/10/28/Copyright/","excerpt":"","text":"前几天写的《游戏和早恋根本就不是洪水猛兽》的时候，为了找到《游戏策划：为什么我的儿子不沉迷游戏？》这篇文章的原文描述，我想查阅一下原文，百度一搜，出来了很多搜索结果： 既然要有原文链接，那我就给一个吧。但是打开文章仔细一看，感觉和原来的不是同一篇，同时纳闷为什么这么多同样的文章，到底哪一个是真的原文呢？本来想着随便给一个算了，反正就是看个内容，看谁的不一样啊，但被Kai Liu训练过的我突然又想起…引用文章必须要有引用的格式，这是对原作者的尊重，好！开始找原文链接百度搜了一圈没搜到，心想还是算了吧，突然看到一篇关于这篇文章的读后感，哈，看这个还写读后感啊，我的好奇心促使我打开了链接，然后！ 我还就真的找到了原文链接！ 这就让我开始好奇为什么我看了那么多媒体的类似文章，却没有找到链接，CSDN里却有人直白的给出了原文引用链接，于是我开始回看之前搜到的文章： 这篇文章之前大火，10w+的阅读量让很多媒体都眼红，于是这些媒体有的直接照抄原文，说是自己原创；有的对文章做小小的改动，以为自己就没有偷窃别人的劳动成果。百度里搜索到的6个类似文章，只有一个注明了来源。看来媒体还是没有自己的操守啊，最基本的人品都败坏了。顺便说一句——还是咱程序员同志们讲道理注意版权啊！ 后来想想这其实对我来说也是一个小事，看我博客的人不多，也没有多少人会真的点进那个连接去看原文，其实我大可不必大费周折去找原文链接。但我觉得这反映了人的态度，和对知识的尊重，如果所有人都不计较文章是谁写的，版权是谁的，那么最终的结果必将是礼崩乐坏。","categories":[{"name":"Life","slug":"Life","permalink":"http://lonewolferic.github.io/categories/Life/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://lonewolferic.github.io/tags/杂谈/"}]},{"title":"游戏和早恋根本就不是洪水猛兽","slug":"Games-and-puppy-love-are-not-monsters-at-all","date":"2018-10-26T16:00:00.000Z","updated":"2018-12-05T04:26:21.703Z","comments":true,"path":"2018/10/27/Games-and-puppy-love-are-not-monsters-at-all/","link":"","permalink":"http://lonewolferic.github.io/2018/10/27/Games-and-puppy-love-are-not-monsters-at-all/","excerpt":"","text":"游戏 最近，某根又双叒叕在宣传他的”电子毒品“论了。 从记事开始，游戏就被贴上了邪恶的标签：游戏被当作靡靡之音，还有我们自己yy出来的美国腐化中国青年旧十条：“一定要把他们青年的注意力从以政府为中心的传统引开来。让他们的头脑集中于体育表演、色情书籍、享乐、游戏、犯罪性的电影，以及宗教迷信。”。 我小时候打游戏打的不多，因为家里电脑本来也不好，加上爸妈也是限制我玩电脑，因为我爸爸认为学生的天职是学习，除了学习以外应该还是学习。玩电脑的娱乐方式是不对的，要娱乐也要换其他的方式去——去同学家玩才是正确且唯一的娱乐方式，反正就是不能玩电脑。 爸妈还经常会给我看各种文章——网瘾少年和家人闹矛盾/为了买装备把家里的矿都花光了/几天几夜不回家/杀害母亲（为啥当时没有磁爆步兵杨永信呢，这样说不定还能吓退好多人，扯远了…）。反正就是把一切归咎于游戏。 被妖魔化的游戏游戏真的有这么可怕吗？在我看来当时的游戏完全没有那么可怕。 优秀的游戏让人收获颇多小时候玩游戏也少，有点印象的除了4399的合金弹头，闪客快打，还有摩尔庄园，赛尔号，红警2其他的也没多少了。 之前有一个帖子很火《游戏策划：为什么我的儿子不沉迷游戏？》，这篇文章给我印象最深的就是里面的——当你见识过越多，就对越低级的刺激不敏感，以及这位游戏策划不仅支持他的孩子买游戏，还给他买更好的游戏。因为更好的游戏能让他的孩子脱离低级游戏，体会更加高档的游戏——高质量的游戏教会的并不比书本要少。 现在看来这句话是在太对了。红警2的气势恢宏的苏维埃进行曲让我不由得想去了解这首歌，最后发现苏维埃进行曲竟然是美国人在21世纪写的，是为了黑苏联，体现苏联的残暴，这引起了我很大的兴趣。随后我又开始去查阅有关于红警2和美苏冷战的诸多细节，才发现红警原来是一部美国人恶搞苏联，黑苏联的游戏，具体的细节很有趣，我有空再写。为什么对冷战这么感兴趣呢，其实也是因为入了美漫的坑，DC神作《守望者》让我深刻地体验了冷战当时的紧张气氛，其实美漫很反映美国历史，这是一个大坑，以后有空再写。所以由此看来其实如果深入了解一个游戏，其实游戏能让我们了解到很多的历史，只是没有家长愿意去了解。 还有一个游戏史上的经典——星际争霸。这款游戏我小时候没玩过（到现在也没玩过，只是看CG），具体了解到也是大学室友谈起的，后来看了暴雪电影公司的CG之后，深深的被这个游戏震撼到了。巨大的世界观，吉姆·雷诺和凯瑞甘的爱恨情仇，星灵的恢弘历史和对战争的反思，虫族的大主宰想方设法拯救自己的种族，摆脱埃蒙的控制。最后各族为了自由放下所有的矛盾和偏见一起对抗埃蒙。暴雪电影厂为我们带来了一部星际史诗。 没有教育我们为什么需要去做更加重要的事怎么说呢，要说游戏和学习谁重要，肯定是学习啊，就像文章里说的低层次的游戏让人特别沉迷。学习非常重要，但是一味地抵制游戏不是提升学习的方法。所有家长只告诉我们不要玩游戏要好好学习，但是从来没有几个家长给我们讲清楚为什么要好好学习。 早恋 这也算是一个青春期大问题吧，所有的学校都会讲这个，所有的学校（杭高你别说话！）都强烈反对校园恋爱。 被污蔑的感情第一次听到早恋大概是初中吧，小学里老师都不提这个，只有同学间会打打闹闹说xx喜欢xx。初中老师就开始说早恋的危害，干扰学习，不干好事什么的。作为也算是受过良好教育的人（我也相信看我博客的也都是这样的），在这里就不说早恋发生性关系堕胎之类的反面例子了。 到了高中，早恋问题被提到地更多了（其实初中老师说的和高中相比都不算啥了），高中老师用那一个个“生动”的例子告诉我们——谈恋爱的都是渣男，谈恋爱是肮脏的行为，对女孩子有爱慕之情是不对的，只有学习才是唯一的王道，喜欢女孩子是一件很耻辱的事，要谈恋爱必须以结婚为目的，如果现在不能确定最后和她结婚，谈恋爱就是在耍流氓；恋爱是洪水猛兽，一旦沾上，整个人就会堕落，没有未来。 初高中的我还是一个很乖的小孩子，对老师家长的话言听计从，所以也就形成了上述的恋爱观。初中喜欢一个女孩子三年，但由于完全不知道如何喜欢一个女孩子，什么时候去表白，所以最后当她躺在病床上的时候，我也不知道自己应该做什么。高一的时候有女孩子喜欢我，但当时抱着谈恋爱是肮脏的行为的想法，加上喜欢她的程度也没有那么深，最后也没在一起。高二也和一个女孩子也有点暧昧，但当时太傻分不清对方喜不喜欢我，也由于被灌输高中生谈恋爱就是在耍流氓的想法，最后就一直关系不明不白，最后到了高三，又被老师提及学习的重要性，千万不能谈恋爱，谈恋爱就前功尽弃，但是对她又有一丝的爱恋，最终还是在高考的压力下屈服，最后也可以说是伤害了她，她也找了其他人做男朋友。高考考完本来想和她表白，解释清楚一切，虽然她已经有男朋友，但我还是想说清楚我的心意，知道注定会失败，但起码不给自己留遗憾。当时毕业旅行定在高考几天之后，可是我由于要参加三位一体，本来我是想去参加毕业旅行的（其实也就两天）。但爸爸说要准备三位一体，为了准备考试就不去毕业旅行了，所以…我都没能在毕业旅行上见到她，也没有和她解释清楚一切。后来还发生的事就不说了，最终这成了我人生最大的黑点和我自己永恒的梦魇。 可以说直到现在，在我最深的内心里，还是对着恋爱抱有着恐惧。虽然我会和你说喜欢就去追啊，喜欢就去谈啊，不要留遗憾啊，这的确是我的心里话。但是在我的潜意识里，被初高中老师植入的关于恋爱的邪恶印象并没有发生改变。6年的耳濡目染，这些观念早已深深的扎进了我的潜意识中，这几年来始终没有人能告诉我们如何去正确的面对自己的情感，如何去积极地和女生相处、谈恋爱。我不会爱，我不知道怎么表白，我也不知道如何去好好爱一个人。我也一直在努力去改变自己，对抗我自己的潜意识。但这又何其难啊，看到喜欢的女孩子，我的潜意识会告诉我“你确定你能和她最终结婚在一起吗，不能那你就是在耍流氓！你是个渣男！”“想谈恋爱就是想和别人xx，你太不干净了！”，我也会因此而退缩。不敢去喜欢别人，不敢释放自己的感情。 本是美好的青春感情却被破了脏水，想想也是很难受啊。早恋本来就不是洪水猛兽，现在却被当做恶龙来对对待。","categories":[{"name":"Life","slug":"Life","permalink":"http://lonewolferic.github.io/categories/Life/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://lonewolferic.github.io/tags/杂谈/"}]},{"title":"“抱歉，我们只要大二以上的......”","slug":"Why-freshmen-are-not-wanted-in-competition-team","date":"2018-10-24T16:00:00.000Z","updated":"2018-10-29T08:29:07.843Z","comments":true,"path":"2018/10/25/Why-freshmen-are-not-wanted-in-competition-team/","link":"","permalink":"http://lonewolferic.github.io/2018/10/25/Why-freshmen-are-not-wanted-in-competition-team/","excerpt":"","text":"这个标题应该很熟悉吧，基本上在所有的比赛交流群的招人广告里都会有这句话：“要求大二以上，有xx比赛经验者优先”。所以，为什么这么多的招人广告都有这个要求呢？ 是因为能力不够吗大一一开始我对这句话没啥感觉，觉得自己的确不行，没有比赛经验，和别人组队也会坑到别人，不让加就不让加吧。但是自从遇到了那某位学长之后，我的观念发生了改变，我觉得既然大二的学长都会这么坑，他的意志力和对待难题的韧性都不如我一个大一的，为什么一定要把高年级同学视为神明呢？那为什么不给大一的真正想做出一般事业的人一些机会呢？ 所以我也一直推行这招人平等主义。在大二的时候，我不会去忌讳队友的年级（因为同时很多大二的和他们大一的时候相比没有任何长进）。我只看中对方的能力，只要他有能力，我就愿意带他们，和我们一起学习做东西。我一直信奉者这个信条，直到招了她…… 思考那位学妹有多坑可以参见那篇博客，当初在招她的时候，简单问答得到的信息是：她大一下参加美赛数学建模，学习python，会爬虫。这个能力在大一的同学里面能排上前5%了，按照我当时的想法——有能力，是人才，愿意带。然后就给进了，结果应该也知道了，被坑出X了。 在后面问责的时候，她在我们这边的项目没有完成任务的时候去参加微信小程序竞赛，去拍照片，刚开始为了先写作业等原因而不写申报书。这些理由在所有的大创负责人眼里都是完全不可接受的。那是什么导致了这些行为呢？能力吗？不是，她的硬实力的确算很强了，但是为什么还是这么坑？ 心态想了很久，唯一的差别就是心态了：因为这不是我主管的项目，所以我可以不负责任；因为我只是大一，我是来试水的，所以我不需要对这个项目负责；因为我和学长也不怎么认识，坑了他也没什么关系；因为我只想混一个加分，所以我不需要做到很好；因为这个项目对我来说不是很紧迫，所以我可以水一水…… 而我们的心态是什么呢：第一次主管申报项目，我得做好。队友们都是我的兄弟姐妹，大家之后要同甘共苦，通力合作。两者的心态差导致了双方的矛盾。 我承认，我在大一加水电大创的时候也是这样的心态，我也觉得我是大一的参加大创就是为了走个流程，这样大二自己搞的时候能顺很多，所以我大一的大创也就啥也没干（嗯，我当时也是个坑）。 当年被歧视的人也开始歧视我的朋友之前和我说她们的社团里面学姐们都认为她们啥也不会，就把一些乱七八糟的活交给她们，可看不起她们了。我当时以为她也会和我一样希望能打破这个鄙视链，创造出一个平等的环境。但是在我之后和她吐槽队友的时候，她说：“大一的你都敢招啊，我是绝对不要大一的，大一的啥都不会”。 所以或者可以说不是大一的什么都不会，而是他们没有压力去学会 如何解决心态问题洗洗睡吧，低年级的心态是完全没法改变的。心态是受压力影响的——想做好大创是因为我们需要做好大创来给自己的科研经历增光添彩。而大一的没有这个压力，因为她们到了大二才会遇到这样的情况。能不能把这个同样的压力给他们呢？不可能！这就好比知道自己要好好学习，但是没有期末考的压力，哪里会翻开书本学习！考前才开始后悔为什么自己当初没有好好学，没有考试的压力下来，你会这样拼命学吗！?人在将去之时方悟虚度光阴，道理我们都懂，可是我们还是会打开手机刷着无聊的八卦新闻。所以你还觉得让低年级的同学和你感同身受，承受一样的压力来和你一起做项目是可能的吗？不可能！ 如何对待低年级同学所以就要一直对低年级同学敬而远之了吗？低年级肯定中有人才，有人品好认真负责的同学。所以我的建议是：大型比赛项目（大创，准备周期长的3人比赛）还是找同级的比较好，因为他们承受着和我们一样的压力，他们会和你一样想去把比赛。而对于一些小比赛（校赛）之类的，可以去接触低年级的同学。","categories":[{"name":"Management","slug":"Management","permalink":"http://lonewolferic.github.io/categories/Management/"}],"tags":[{"name":"管理","slug":"管理","permalink":"http://lonewolferic.github.io/tags/管理/"},{"name":"组队","slug":"组队","permalink":"http://lonewolferic.github.io/tags/组队/"}]},{"title":"Latex小技巧","slug":"LaTeX_tricks","date":"2018-10-09T16:00:00.000Z","updated":"2018-10-12T13:24:38.950Z","comments":true,"path":"2018/10/10/LaTeX_tricks/","link":"","permalink":"http://lonewolferic.github.io/2018/10/10/LaTeX_tricks/","excerpt":"","text":"解决表格过宽，超过纸张边缘： \\resizebox{\\textwidth}{12mm}{ tabular环境 } 实例： 12345678910111213\\begin&#123;table&#125;[htbp] \\centering \\resizebox&#123;\\textwidth&#125;&#123;12mm&#125;&#123; \\begin&#123;tabular&#125;&#123;|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|c|&#125; \\toprule 变量 &amp; $x_&#123;11&#125;$ &amp; $x_&#123;12&#125;$ &amp; $x_&#123;13&#125;$ &amp; $x_&#123;14&#125;$ &amp; $x_&#123;21&#125;$ &amp; $x_&#123;22&#125;$ &amp; $x_&#123;23&#125;$&amp; $x_&#123;24&#125;$ &amp; $d_&#123;1&#125;^&#123;-&#125;$ &amp; $d_&#123;1&#125;^&#123;+&#125;$ &amp; $d_&#123;2&#125;^&#123;-&#125;$ &amp; $d_&#123;2&#125;^&#123;+&#125;$ &amp; $d_&#123;3&#125;^&#123;-&#125;$ &amp; $d_&#123;3&#125;^&#123;+&#125;$ &amp; $d_&#123;4&#125;^&#123;-&#125;$ &amp; $d_&#123;4&#125;^&#123;+&#125;$ &amp; $d_&#123;5&#125;^&#123;-&#125;$ &amp; $d_&#123;5&#125;^&#123;+&#125;$ &amp; $d_&#123;6&#125;^&#123;-&#125;$ &amp; $d_&#123;6&#125;^&#123;+&#125;$ &amp; $d_&#123;7&#125;^&#123;-&#125;$ &amp; $d_&#123;7&#125;^&#123;+&#125;$ \\\\ \\midrule 计算结果 &amp; 3 &amp; 37 &amp; 3 &amp; 4 &amp; 37 &amp; 3 &amp; 6 &amp; 1 &amp; 0 &amp; 7 &amp;0 &amp; 50 &amp; 0 &amp; 23453 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 3 &amp; 0 &amp; 2 &amp; 0 \\\\ \\bottomrule \\end&#123;tabular&#125;&#125; \\caption&#123;普通老板计算结果&#125; \\label&#123;tab:addlabel&#125;%\\end&#123;table&#125;% 两张小图并排 1234567891011121314\\begin&#123;figure&#125;[h] \\begin&#123;minipage&#125;[t]&#123;0.5\\linewidth&#125; \\centering \\includegraphics[width=2.2in]&#123;../DIP/edge.jpeg&#125; \\caption&#123;边缘检测后提取的部分圆周&#125; \\label&#123;fig:side:a&#125; \\end&#123;minipage&#125;% \\begin&#123;minipage&#125;[t]&#123;0.5\\linewidth&#125; \\centering \\includegraphics[width=2.2in]&#123;../DIP/final.jpeg&#125; \\caption&#123;标注残缺的部分&#125; \\label&#123;fig:side:b&#125; \\end&#123;minipage&#125;\\end&#123;figure&#125;","categories":[{"name":"Others","slug":"Others","permalink":"http://lonewolferic.github.io/categories/Others/"}],"tags":[{"name":"latex","slug":"latex","permalink":"http://lonewolferic.github.io/tags/latex/"},{"name":"排版","slug":"排版","permalink":"http://lonewolferic.github.io/tags/排版/"},{"name":"论文","slug":"论文","permalink":"http://lonewolferic.github.io/tags/论文/"}]},{"title":"智斗联通客服","slug":"Beat-China-Unicom-customer-service-with-wisdom","date":"2018-09-26T16:00:00.000Z","updated":"2018-09-30T13:26:52.677Z","comments":true,"path":"2018/09/27/Beat-China-Unicom-customer-service-with-wisdom/","link":"","permalink":"http://lonewolferic.github.io/2018/09/27/Beat-China-Unicom-customer-service-with-wisdom/","excerpt":"","text":"事因 9月份升级了套餐，原来应该有30G的流量，结果最后只认为我有8个G，扣了200+的话费。突然吃土。 客服处理 中秋节第二天发现的问题，手机突然连不上网了。于时去找营业厅，说没话费了，以为就是普通的没话费了，冲了40的话费。然后晚上突然又没网了，冲了100话费。第二天又双叒叕没了，查询了余额，最后发现246的话费，0的余额。 打了客服，第一天没反应，第二天终于打来了电话，结果是一个回访电话！？似乎是联通客服后台直接给我点解决了！？怒不可遏，必须差评！然后有又双叒叕给客服打电话，最后，终于在事故出现第五天，客服总算是给我来解决问题了…… 智斗 客服打来电话，约我等现在决战，如何对敌？都督，客服连拖我五天时间，臭不要脸。现在phone前，老夫只需一些话语，便可让客服拱手而降，联通不战自退。 客服：您好，我们查询了您的话费流量，您的话费是没有问题的。 喵喵喵？简称不愿意退钱，摆一套官话糊弄我，我可不吃这一套。 我：XXXXX（说明情况中） 客服：这个我给你看了，你的流量主要是视频流量。计费是没有问题的。 划水和稀泥，鉴定完毕！ 我：我的套餐月初的时候给我的短信说的是有30G的流量，结果现在发来短信，里面说我只有8个G的流量。这个肯定不对啊。 客服：有这个问题的话我这边可以给你退一半的资费。 有点退让，但是……什么！才一半？还是100+话费？不行不行，得把多流出去的钱全部要回来！ 我：这样吧，我给你念一下联通发来的短信：9月1号，本月资源账本……（省略短信内容），截至……(省略第二条短信内容) 客服：这个不是你理解的这样的，短信可能本身有点误导…… 误导！客服不说我还没想到这个点，既然你说了，我不抓着这个点说怎么好意思呢？ 我：既然你们的短信故意对我们消费者进行误导，你们这是属于故意误导消费者的行为，我可以去消费者保护协会告你们；你们这样招揽顾客，对于其他公司造成了不正当竞争，我可以去工商管理局告你们。 （有啥问题就搬出这两个局就可以了） 客服：所以您想怎么处理呢？ 怂了哈哈哈哈哈 我：首先这个本来套餐巴拉巴拉，起码总应该有30个G（突然发现还差4个G），我处理这件事，从中秋第二天就开始了，到现在都是第五天了，这几天都没法用流量，我的学习生活收到了极大的影响，算上误工费，就应该只算原来套餐的费用。 客服：好的，（然后说了一堆什么祝您生活顺心的话） 结果 最后当然是成功退款了，207元都回来了。这也算是自己第一次成功的维权。之前在营业厅店里的时候，业务员和我说遇到这种问题，态度强硬一点，一般就可以把话费要回来。 写这篇博客呢也就是最近五天都没法正常上网，最后总算完美解决了这个问题，舒坦！","categories":[{"name":"Life","slug":"Life","permalink":"http://lonewolferic.github.io/categories/Life/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://lonewolferic.github.io/tags/杂谈/"}]},{"title":"一些组队管理经验","slug":"How-to-form-a-team","date":"2018-09-25T16:00:00.000Z","updated":"2018-10-29T08:29:04.562Z","comments":true,"path":"2018/09/26/How-to-form-a-team/","link":"","permalink":"http://lonewolferic.github.io/2018/09/26/How-to-form-a-team/","excerpt":"","text":"（本文不定期更新） 大二一年打了不少比赛，也组了很多的队。有失败的，也有成功的；有队友完美配合的，也有不欢而散的；有建立了生死友谊的，也有组了队之后希望老死不相往来的；有大佬带我飞的，也有我凭一己之力拯救队伍的。所以在此分享一下这一年获得的一些比赛组队经验。 坑队友长什么样 鲁迅说过：”好的队友千篇一律，坑的队友‘各有千秋’“。概括起来，坑的队友有如下特征： 不负责任 划水严重 明明啥都没干，牛气哄哄的像老大一样 经常不回消息 没有紧急的事务要处理，一点小事就请假 毫无队伍观念，事不关己，高高挂起 不出钱也不出力 明明犯了错，不悔改，还抬杠 经过我的调查，遇到坑队友是大家非常普遍的问题。比如：某大创交流群里，很多人都在关心为啥项目异动的按钮没了……（项目异动里可以处理人员变动） 盘点我遇到过的坑队友 某学长当时我大一，他大二。第一次遇到是在校赛仿真机器人足球大赛里面，当时被安排了一个队友，三个人组一个队，还想再找一个，官方的组队群里有一个学长一直在喊求队友，当时就直接找了他组了队。 纯粹的C++代码写的机器人程序，我们都不太会。比赛前一天，叫来了其中一个队友小姐姐，想叫学长一起来写个代码出来去比比看。当时的情况就是我们也没见过面，都先自己看代码，看了代码之后再交流交流写一写，然后第二天去比赛。结果由于这些东西我们从来没有编过，所以我和学长都看不懂。 学长：代码你看懂了吗？我看不懂。 我：我也不太看的懂诶。这样吧，我们到一餐讨论讨论，说不定就能看懂了。 学长：都看不懂玩个xx。 我：？？？ 然后学长就退群了……？？？喵喵喵？？？ 这导致了我对学长们的态度的转变，对于低年级同学技术能力的认可。然而这些导致我遇到了第三个坑队友。原来我对学长的态度是自带崇拜，在那之后，学长要是想获得我的尊敬，只有以技术服人的方式才行。当然啦，基本待人接物的礼节尊重我肯定还是有的。 后来我才想通为什么这个学长在群里喊了两三天找队友，原来根本就没有人想和他组队，名声早就臭了…… 第二次相遇是RM招新群里，7月发布的招新要求，9月提交考核作业，暑假用来自学。电控组学习STM32开发板，机械组学习SW制图软件。我7月底学完了C51单片机，8月开始学STM32，学到8月中旬的时候，考核题大致已经能做了。然后，8月中旬的时候，那位某学长在群里问：”SW的安装包在哪里下呀“……我都快学完了你连软件都没下！？这等人对待比赛的上心程度就足以反映他们坑的程度了。在群里聊的时候，他还在我发的消息里回复”大佬好“，但我根本没有回他，因为这样的坑壁我完全不想和他说话。（当时还立下如果他进了RM队伍，我就退队，我不愿意与这样的人为伍，最后发现他也没有加入RM队伍） 某同级此人成绩很好，成绩前5%。但是确贼坑。下面诉说一下她的事迹。 某项目组成员，写申报书的时候我分配了任务，我自己的任务几乎是最多的：整个申报书书写思路建立，分配每个部分大家怎么写，审核每个人写的部分的质量，串联整个申报书部分组合为整体……在写申报书的时候，由于项目概述非常重要，所以我分配任务的时候明确指出：每个人都要写一份自己版本的项目概述。结果当时周五整合的时候（周五就要提交了），想和这位同级的同学和下面要讲的某学妹一起商量下整合在一起的思路，这样赶快解决掉这个任务好早点了事。结果这俩人都没有来，某学妹当时还有很多部分没有写完，学妹的部分下文再说，先说这位同级同学。气得我直接打电话让他们到一个教室来一起写修改申报书，结果这货连电脑都没带。我要求她拿电脑之后来这个教室一起修改，结果她却发起了牢骚。 她：项目是你想的你写整合就好了 我：我一个人整个只是按照我的思路来的，所有人的思路加在一起肯定比我一个人的思路要好啊 她：但就是应该你一个人来写这个，我自己的部分都写完了 我：你并没有写完你的部分，我要求每个人都要写一份项目摘要你没发给我啊 她：这个我没看到啊（其实我在任务分配的文件里用黑体标出的） 我：没看到那就现在自己写一个份啊 她：你自己想的项目你最熟悉啊，你写概述最好啊，你写一个就够了 我：可是我要求了每个人都要写一分的，吴xx早就写好发过来了，她看见了你怎么没看见 她：反正这个就应该你写 我：为什么？ 她：因为你是组长 我：（嘴上笑不出来，心里mmp） 当时招进来的时候看到她成绩很好，在我潜意识中成绩好的人道德品行都是很好的，对自己成绩负责的人，对他人也会负责，最基础的道德准则也应该会有。 之后，写完申报书之后两个多月答辩。我分配的前一个月用于学习python，一个月后，检查代码 （其实这后面说的某学妹也在场，但是这里就只写我和这位某同级的对话） 我：python都学了吗？ 她和某学妹：学了 我：好，现在打开电脑，检查代码 她她和某学妹：我没没写代码 我：为什么没写代码？ 她：不会装。 我：没写代码你们学了吗？ 她：学了 我：没写代码你们怎么学的？ 她：看视频教程学的 我：只看视频自己不码代码能学会吗？ 她：能啊，很简单啊 我：（这里已经很火大了）好，那我让你写一个99乘法表，给你30分钟写 她：我电脑上没有安装python 我：我电脑给你，你在这上面写。 20分钟过去了….. 我：写完了吗？ 她：（写了两行，还是都是错的，运行代码都不会）这个挺难的，写不出来（懂点编程的人都知道99乘法表是编程语言中循环的最简单训练题） 我：这个我几秒钟就给你写完信不信 她：你写啊 我：(几秒钟写完) 她：（开始推脱找理由） 之后就是火大的骂人阶段，总共骂了一个小时，中途一餐关门就跑到青广上继续骂，最后的结果是第二天青广晚风吹多了我得了感冒。 某学妹这个是颠覆了我世界观的，她的坑引出我之后要写的一篇博客《“抱歉，我们只要大二以上的……”》。之前由于被那位某学长坑了，心中一直愤愤不平，觉得一定要给大一的机会，大一大二无所谓，有技术就好。 先是她自我介绍，会爬虫，参加美赛建模，对我的项目很感兴趣。然后就让进了，我告诉她我不会把她当作低年级同学看待，我对她的要求是和大家一样的。 先说说第一次开会的时候吧，原定的下午开会，结果她说她手机丢了，得去处理。然后我就把时间调到了晚上，结果她还要请假，问她原因：“我要洗衣服！”洗衣服直接放洗衣机不就好了”“前面有人在用，我预约了机子”“那你开完会再去洗啊”“我已经等了洗衣机了，再过点时间就排到我了”“你排到之后把衣服放进去洗，等开完会再回来拿不久行了”“我有洁癖，要等它洗完我自己拿”我简直要疯了：“你把衣服拿到17舍来，我这边洗衣房空着，我付钱给你洗，你必须去开会（当时已经没多少时间写申报书了，时间紧迫，那也是唯一的开会的机会）”最后她放下她的衣服来开会了。 再说说她写申报书的时候的坑吧，当时周五交申报书，我给她部分定的DDL是周二，周三起来问她写好没有，她说没写好，我说你今天必须写完，”好的，学长“，周四检查她，”写完了吗？“”还没写完“。当时已经有点生气了，”周四晚必须写完，写不完就熬夜，熬夜写不完就通宵写，周五早上一醒来，申报书活要见人，死要见尸！“。周五一醒来，还是毛都没有，气的怒不可遏，把她拎到教室在我眼前写。结果她之前啥都没写……还有就是申报书的质量，我给她分配的任务量是最少的，结果她给我发的文档的打回率是最高的（90%以上），经费预算里让她去抄别人的表格的写法，结果给我把别人的教师指导费5000给抄了过来…… 最后就说活分配的代码任务吧，每个人都分配了实验任务，劳动节放假结束之前要求提交报告。她说她没弄完，要延一星期“学长放心，我会弄完的”，我同意了。一星期之后，检查情况。“啊，学长我没写完”“还要几天”“一星期”“再给一星期，必须写完”“好的，学长放心”。第三次催的时候，我已经在RM南部分区赛的赛场了，当时收集情报不利，很是蓝瘦（当时离大创答辩已经不远了）。我又双叒叕去检查 她：我还没有弄完 我：都给你延了两个星期了你怎么还没弄完？ 她：学长答辩是什么时候啊（还想把时间再拖到答辩前，那时候，黄花菜都凉了！） 我（已经气到骂人，我RM队友都被我吓到了）：你不要管大创答辩什么时候，现在就给你两个选择，要不明晚之内写完报告，要不就退出队伍！ 过了许久 她：抱歉，我退出把 这还不是最狗血的！最狗血的是！我们项目被定为国家级之后，她又回来找我想归队…… 剩下的内容你们就自行脑部吧。 什么样的人是好队友 好队友嘛，“千篇一律“，人人都想要好队友。极品大佬队友固然难找，但是如果身边的人是一个好队友，用好这个好队友，也能做出很好的成绩。其实在我看来，好队友的要求其实很低：不做一个恶人。 听了我故事之后你们应该也会知道，队友不坑就是福哇！ 好队友的另外一个代名词就是：靠谱！ 如何找到好队友 从哪找 千万不要在大群里招队友 先给大家排个坑，前完不要在大群（2018大创交流群etc）里发广告招人，这样招到的人普遍质量很差（前文的两个坑就是从大群招来的）。想从这里找队伍的人普遍很功利，只想让自己舒服。有些人就是想混个加分走人的，对于项目根本不关心。在这里招人是一件非常愚蠢的事。 大型团队 如果你加入了大型的机器人团队（或者其他大型团队）——如RM火锅战队，iGEM etc，那么找队友就是世界上最简单的事，首先入队的人就肯定不是坑，而且技术都是经过考核的，人才种类也多：制造，电子电气，计算机软件，各类人才应有尽有。随便挑几个就可以打比赛去了。 大佬 前文不是说过很难和大佬组队的吗？这里是什么意思？首先，你可以去问问大佬有没有意愿组队，和大佬组队总是好的（不接受一群大佬组队最后由于大佬项目多顾不过来最后还不如何小白组队的歪门邪道理论），如果没有办法组到队，可以开口向大佬要人：“你有推荐的人吗？”能入大佬法眼的人都是有两把刷子的。 朋友 和没有情感基础的人做事很容易出问题，所以何朋友组队也是很好的选择，综合了阿金学长的建议，最适合组队的朋友是那种有关系但又不是特别熟的那种人。（特别熟的产生分歧的时候不好处理，俗话说“清官难断家务事”） 什么时候找找队友越早越好，最好比赛消息一出就去找，晚了好队友都被强光了，只剩下坑的了。的确你是真金，不怕不会不发光没人要你，但是你害怕组到坑队友呀，所以组队还是越早越好。我寒假的时候大创组队由于我自己的拖延症很后面才组队。为此我也付出了血的代价！ 怎么判断对方是不是坑 看身份 类似于大型团队那一点，身处于大型技术团队的人能力和靠谱程度肯定不会差。这就好比你知道电脑坏了找飞扬，因为你相信飞扬维修部的人技术肯定不会差。 看成绩 我曾经以为成绩好的人肯定不坑，现在我变了，所以如何直接查看对方成绩的方法我也不透露了，想要知道的可以私信联系。 问朋友 这是最真实的手段，去问问他们学院的自己的朋友这个人咋样，总能问出点花头出来。 作为一个组长，如何管理好自己的组员 工头何为工头？简单理解为包工头。负责组内进度安排。如果是3-5人的小型队伍（或者其他内容单一的团队——如RM电控组），工头一般就由组长承担，负责承担组内所有人员的工作进度。 如果是一个较为大型的/人分公较多的团队，组长需要将人分类（按照技术工种，内容），分为的每一个小组都要又一个负责人，这个负责人负责他的组员，你直接管理组长，出问题了直接找组长，组长再把过分给小组组员。 情感纽带没有情感纽带的队伍是无法长久维持的，对于长久的团队，团建工作尤为重要，大家一起分享经验，故事，玩耍都可以增进友谊，这样，比赛中发挥的效果也会更好。 让队友“无忧无虑”组长需要负责一些其他杂七杂八的事——和老师交接，解决经费问题。让队友无后顾之忧，队友才会为你心无旁骛地好好干活。","categories":[{"name":"Management","slug":"Management","permalink":"http://lonewolferic.github.io/categories/Management/"}],"tags":[{"name":"管理","slug":"管理","permalink":"http://lonewolferic.github.io/tags/管理/"},{"name":"经验","slug":"经验","permalink":"http://lonewolferic.github.io/tags/经验/"}]},{"title":"无刷电机初始化方法","slug":"Brushless-motor-initialization-method","date":"2018-09-22T16:00:00.000Z","updated":"2018-09-25T20:13:14.623Z","comments":true,"path":"2018/09/23/Brushless-motor-initialization-method/","link":"","permalink":"http://lonewolferic.github.io/2018/09/23/Brushless-motor-initialization-method/","excerpt":"","text":"问题描述 问题背景：炮台摩擦轮电机需要转动，摩擦子弹使子弹获得速度。涵道电机也需要转动以此获得推力。 问题：摩擦轮电机和涵道电机都是无刷电机，但是和底盘的电机的电调不一样，底盘电机用的C620电调是直接通过CAN通信发送电流值，而这里的电调是用PWM波控制的。 实验对象：好盈100A电调，4114无刷电机/涵道电机。 需要初始化的情况： 新电调第一次使用 电调三相电连接的负载电机更换 输入端PWM高电平的上下限改变 硬件简介 无刷电机工作原理 有刷电机内部电流换相是通过内部的电刷完成的，而无刷电调是通过三相电按照一定的时序轮流通电达到的电机转动效果。 无刷电调控制电机转动必定是要使用电调，电调负责将电调电源输入端的直流电源转化为电调输出端的三相电，驱动无刷电机转动。三相电的电流量由电调的输入端信号决定。步兵车底盘的C620电调输入信号是由单片机通过CAN总线输入的。而这次用的好盈电调是的输入端是通过PWM波信号输入的。 注意：这里给的PWM波的意义和有刷电机驱动板的输入PWM信号不一样，有刷电机驱动板输入端的PWM信号的作用是让驱动芯片导通和关闭，而无刷电机驱动器输入端的信号的意义其实是数字信号，电调检测PWM波占空比输入相对应的三相电的电流量大小。 初始化方法 电调初始化电调初始化的意义：好盈电调一般来说是给船模航模爱好者用的，所以网上查初始化资料会发现，说是将油门推满进行初始化。电调要正常工作，电调需要知道自己三相电端接的电机的特性（内部NS极磁铁有几块，电流的时序怎么给），还需要知道遥控器给的满油门和零油门（油门量程）。 未对频没有对频的时候，电调发B—-B—-B—-的声音，中间时隔大约2s。此时电调未对频，无刷电机无法转动。 对频 输入PWM波的要求 频率：40-50Hz（本次使用的是40Hz） 满油门：2ms高电平 零油门：1ms高电平 操作 由于对频操作是需要人和电调交互的，所以使用遥控器来进行对频操作。先修改程序，遥控器的ch1摇杆通道控制PWM波的占空比（推到满，PWM占空比最大，对应满油门）。 先不给电调上电，将遥控器油门推到满，再给电调上电，当电调发出B-B两声之后，松开摇杆，然摇杆回到自然的中间位置，然后电调会发出B-B-B-B-B–B~~，最后一下B长响一下之后，代表电调对频成功。此时,推动摇杆，电机将开始转动。 对频之后第一次对频成功之后就不需要每次上电都重新对频。如果是遥控器控制，上电的时候，摇杆不要拨动（零油门位置）。电调发出B-B-B-B-B–B~~的声音之后（自检），电调开始正常工作。此时,推动摇杆，电机将开始转动。 如果是程序控制，程序一上电的时候给电调零油门对应的PWM波，等待6s之后，初始化完成，电调自检成功。这时，改变PWM占空比就可以开环控制电机转速。 四、 程序 功能 S1拨在最上面的时候不能操作无刷电机。 S1拨在最下面的时候，右摇杆的上下方向控制油门大下，拨到最上面是满油门，中间位置零油门。 S1拨在中间的时候，功能为锁住当前油门量不变。此时，拨动右摇杆，不会影响油门的大小。 其他本程序的S1拨中间锁住油门功能一般用于单人测试摩擦轮或者其他不需要控制电机转速的情景。但是此时让电机停下需要再去拨动S1到最上面，单人操作的时候可能会不是很方便，要注意安全，不要让电机伤人。 本程序不仅可以用于测试摩擦轮，还可以用于其他任何测试驱动无刷电机的场景——如涵道电机推力测试。 DJI的电机也是需要初始化的： 主要源码程序文件名：无刷电调初始化20180924 123456789101112131415161718192021222324252627282930313233343536void PWM_Configuration(void)&#123; GPIO_InitTypeDef gpio; TIM_TimeBaseInitTypeDef tim; TIM_OCInitTypeDef oc; RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA ,ENABLE); RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE); gpio.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2; gpio.GPIO_Mode = GPIO_Mode_AF; gpio.GPIO_Speed = GPIO_Speed_100MHz; GPIO_Init(GPIOA,&amp;gpio); GPIO_PinAFConfig(GPIOA,GPIO_PinSource0, GPIO_AF_TIM5); GPIO_PinAFConfig(GPIOA,GPIO_PinSource1,GPIO_AF_TIM5); GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_TIM5); tim.TIM_Prescaler = 84-1; tim.TIM_CounterMode = TIM_CounterMode_Up; tim.TIM_Period = 2500-1; tim.TIM_ClockDivision = TIM_CKD_DIV1; TIM_TimeBaseInit(TIM5,&amp;tim); oc.TIM_OCMode = TIM_OCMode_PWM2; oc.TIM_OutputState = TIM_OutputState_Enable; oc.TIM_OutputNState = TIM_OutputState_Disable; oc.TIM_Pulse = 1000-1; oc.TIM_OCPolarity = TIM_OCPolarity_Low; oc.TIM_OCNPolarity = TIM_OCPolarity_High; oc.TIM_OCIdleState = TIM_OCIdleState_Reset; oc.TIM_OCNIdleState = TIM_OCIdleState_Set; TIM_OC1Init(TIM5,&amp;oc); TIM_OC2Init(TIM5,&amp;oc); oc.TIM_Pulse = 500-1; TIM_OC3Init(TIM5,&amp;oc); TIM_OC1PreloadConfig(TIM5,TIM_OCPreload_Enable); TIM_OC2PreloadConfig(TIM5,TIM_OCPreload_Enable); TIM_OC3PreloadConfig(TIM5,TIM_OCPreload_Enable); TIM_ARRPreloadConfig(TIM5,ENABLE); TIM_Cmd(TIM5,ENABLE);&#125; 123456#define PWM1 TIM5-&gt;CCR1#define PWM2 TIM5-&gt;CCR2#define SetFrictionWheelSpeed(x) \\ PWM1 = x; \\ PWM2 = x; 123456789101112if ( GetMouse_press_l() == 1)&#123; SetFrictionWheelSpeed( (RC_CtrlData.rc.ch1 - 1024) * 1.5 + 1000 );&#125;else if ( GetMouse_press_l() == 2)&#123; ;&#125;else&#123; SetFrictionWheelSpeed( 1000 );&#125;","categories":[{"name":"Embedded","slug":"Embedded","permalink":"http://lonewolferic.github.io/categories/Embedded/"}],"tags":[{"name":"电机","slug":"电机","permalink":"http://lonewolferic.github.io/tags/电机/"}]},{"title":"Hexo博客markdown文件图片路径自动处理脚本","slug":"auto-blog-img-path-process","date":"2018-09-05T04:20:36.000Z","updated":"2018-09-25T20:11:28.385Z","comments":true,"path":"2018/09/05/auto-blog-img-path-process/","link":"","permalink":"http://lonewolferic.github.io/2018/09/05/auto-blog-img-path-process/","excerpt":"","text":"问题描述Hexo博客通过markdown文件来生成html文件。而我们的博客中经常会插入图片，如何方便的让插入的图片经过渲染之后正确地显示在网页上是我们要解决的问题。 传送门：hexo博客的图片解决方法 这里的方案可以在hexo new post的时候产生一个文件夹，并且在hexo g的时候自动关联图片文件夹和md文件。但是我们在写博客的时候插入图片一般是直接将图片拖入typora中，这样留下的图片路径是绝对路径，但是hexo编译需要我们的图片路径是相对路径才可以正确现实图片。那么怎么整呢？每次拖进去之后切换源码模式然后自己删路径？不不不不，像我们这么聪（lan）明（duo）的人，肯定是要用自动的方式来解决这个问题。 于是就有了这么一个脚本，主要工作思路就是找到带有图片的文章（有同名的文件夹），然后打开文章，用正则表达式寻找图片链接，然后删除前面的路径，只剩下相对路径。 使用方法配置详细方法在上面的链接中。这里就讲一个注意点： hexo的_config.yml这里的配置 1post_asset_folder: true 执行来到_Post的目录下，运行python代码： 1python turn.py 大功告成 源码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import osimport reclass Article: def __init__(self, name): self.name = name self.dir = name.strip('.md') # print(self.name) # print(self.dir) def run(self): f = open(self.name, 'r', encoding='UTF-8') f_new = open(self.name + '.new', 'w', encoding='UTF-8') print('正在修改' + self.name + '的图片路径') lines = f.readlines() for line in lines: picture_path = re.findall(r'!\\[.&#123;0,100&#125;\\]\\(.&#123;0,10000&#125;\\)', line) # print(line) if picture_path: picture_path = picture_path[0] # print(picture_path) new_path = picture_path[0 : picture_path.index('(') + 1] + picture_path[picture_path.index(self.dir) : ] + '\\r\\n' #print(new_path) f_new.write(new_path) else: f_new.write(line) f.close() f_new.close() # 换文件 os.remove(self.name) os.rename(self.name + '.new', self.name) print('修改完毕')def main(): article_list = [] dir_list = [] article_with_picture_list = [] files = os.listdir('.') # print(files) for f in files: if '.md' in f: article_list.append(f) elif '.' not in f: dir_list.append(f) # print(article_list) # print(dir_list) for dir in dir_list: for article in article_list: if dir in article: article_with_picture_list.append(article) print('查询到本目录下有以下文章的图片路径需要修改：') for article_with_picture in article_with_picture_list: print(article_with_picture) # 执行转换 for article_with_picture in article_with_picture_list: article = Article(article_with_picture) article.run() print('谢谢使用')if __name__ == \"__main__\": main()","categories":[{"name":"Python","slug":"Python","permalink":"http://lonewolferic.github.io/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://lonewolferic.github.io/tags/技术/"},{"name":"python","slug":"python","permalink":"http://lonewolferic.github.io/tags/python/"}]},{"title":"建议认真学的选修课","slug":"Suggested-elective-courses","date":"2018-09-03T16:00:00.000Z","updated":"2018-09-25T20:11:28.385Z","comments":true,"path":"2018/09/04/Suggested-elective-courses/","link":"","permalink":"http://lonewolferic.github.io/2018/09/04/Suggested-elective-courses/","excerpt":"","text":"工程制图 推荐指数：4 如果要搞机器人比赛，机（bei）械（guo）组画图的时候总得看懂吧，虽然教的很浅，但是大致听听，懂点东西还是好很多的。 复变函数 推荐指数：10 以前觉得傅里叶拉普拉斯有啥用？我就是饿死，挂科，死外边，也不会去学他的！嗯，真香！工程里频域分析比时域分析方便多了。 同时，复变函数是信号与系统的基础，信号与系统又是 自动控制原理的基础。so……学不好复变，满盘皆输！ 已经变必修了 数值分析 推荐指数：9 颠覆数学观，微积分里告诉我们严谨的公式推导计算，每一个等号换元都要仔细考虑，这门课告诉我们如果算那些没法（严谨）算的东西：最小二乘法解决超定方程，插值拟合函数。 也变成必修了 计算机软件基础 推荐指数：8 说是计算机软件基础一个听起来很普通的名字，其实是数据结构，计算机专业的最重要的专业基础课。如果想走计算机的方向这门课必须学好。里面的堆栈的概念也会在微机原理里面出现。这门课介绍不同的数据结构：顺序表，堆栈，队列……计算机专业面试笔试必考的东西。 数据库 推荐指数：6 数据库嘛，刚开始很无聊，后面就突然：这什么鬼？学到这了？SQL语句挺有用，如果想做大数据之类的可以尝试去学。但是没有学好照样可以搞数据分析之类的，因为现在的很多数据都是csv格式，pandas可以直接导入，但是pandas也用到了数据库里面主键之类的概念。 信号与系统 推荐指数：10 学完之后你就知道为什么要去学复变了，学了自动控制原理就知道为什么要学信号了。里面的卷积，单位信号，频域分析细细想来都是很有用的东西。 数字图像处理 推荐指数：10 模式识别的方向。","categories":[{"name":"Course","slug":"Course","permalink":"http://lonewolferic.github.io/categories/Course/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://lonewolferic.github.io/tags/学习/"}]},{"title":"2018暑期RM培训总结","slug":"2018-summer-vacation-RM-training-summary","date":"2018-08-30T16:00:00.000Z","updated":"2018-09-10T02:55:47.015Z","comments":true,"path":"2018/08/31/2018-summer-vacation-RM-training-summary/","link":"","permalink":"http://lonewolferic.github.io/2018/08/31/2018-summer-vacation-RM-training-summary/","excerpt":"","text":"学会的： 底盘 底盘代码熟练掌握。 了解了如何使用CAN总线的方式驱动电调控制电机转动。 dbus通信数据报。 修复了底盘电调不上电的bug，至今未出现过无法上电的情况。（不代表已经彻底修复） 实践了热插拔的危害。 PID 了解了位置式PID和增量式PID，知道两者在应用方面的区别，但是对于底层原理上的区别还不是理解的很透彻。 了解了PID里面的积分限幅部分，学会使用变比例PID控制器进行积分限幅。 学会了用visualscope进行PID调参。 调了二代步兵的底盘PID。 云台： 熟悉了云台代码结构，对于CanBusTask，RemoteTask，ControlTask三条进程熟悉了解了。 了解了云台的整个通信传输路线，帮陈独秀同志编写了正反转的拨弹电机代码。 了解了云台底盘随动系统的控制回路和控制方法。 了解了串级PID。 编程方面了解了结构体里使用函数指针，造出类的效果的方法，非常优美。 未完成的： 底盘 SetSpeed和Kp很大时电机反转问题未找出原因。 云台 未调过PID参数。 对于随动的代码只是大致了解，对于里面的细节未能熟练掌握。 还是没能搞明白（没有实践操作）为什么拨弹电机单发模式不能使用PID。 三、未来规划： 10月1日前调试完毕云台代码，对于云台的PID进行一次调参，特别是串级PID的代码。 未来调试模块的时候想调一下6500/9250, 随动控制系统, 开机自检模块上线。 想让战车实现更多的自动化方法。 在考虑是否能使用ROS使战车更加的智能化（智能路径规划，简单的视觉等等）。 好好打游戏, 争做好操作手。","categories":[{"name":"Control","slug":"Control","permalink":"http://lonewolferic.github.io/categories/Control/"}],"tags":[{"name":"RoboMaster","slug":"RoboMaster","permalink":"http://lonewolferic.github.io/tags/RoboMaster/"},{"name":"总结","slug":"总结","permalink":"http://lonewolferic.github.io/tags/总结/"}]},{"title":"浅析RM步兵机器人云台-底盘随动系统","slug":"Analysis-of-gimbal-servo-control-system","date":"2018-08-26T16:00:00.000Z","updated":"2018-09-25T20:11:28.385Z","comments":true,"path":"2018/08/27/Analysis-of-gimbal-servo-control-system/","link":"","permalink":"http://lonewolferic.github.io/2018/08/27/Analysis-of-gimbal-servo-control-system/","excerpt":"","text":"什么是随动 随动系统指的是两个部分一个主动移动，一个自动跟随主动部分移动。 在RoboMaster中，云台和底盘组成了我们的步兵机器人。操作手通过云台上的图传系统以第一视角操作机器人，这里就用到了随动系统：底盘跟随云台的旋转而旋转。 为什么要随动 对于操作手来说，操作手是以第一视角来进行操作的。当操作手发出向前移动的指令的时候，机器人需要以操作手视角的前进方向前进。机器人移动依靠底盘。看似好像没有随动什么事。来，让我们看看没有随动时的情况： 底盘运动是按照底盘的前后左右移动，所以当云台左右转动后，云台的前方向和底盘的前方向不是同一方向的。当操作手发出前进指令时，机器人会按照底盘的前进方向移动，而不是操作手的视野前方。操作手第一视角得到的反馈效果就是：我TM怎么在平移？（图下情况为向左前方移动） 如此可以看出来，没有随动系统对于操作手来说简直是灾难！如何解决这个问题呢？只要我们云台左右旋转的时候，底盘也跟随旋转就可以了，达到底盘的前后左右和云台的前后左右相同就可以了，这就是我们随动的目标。（下文中将底盘的前后左右方向和云台的前后左右方向简称为底盘相对坐标系和云台相对坐标系） 实现方案 硬件介绍 云台 YAW轴电机上图已经显示了我们控制云台方向的两个电机：YAW轴电机，PICTH轴电机，分别控制左右和上下转动角度。在云台-底盘随动系统中，我们只关心YAW轴电机。 YAW轴电机下半部分固定在底盘上，电机轴带动整个云台左右移动。 码盘也叫编码器，这里说明的码盘是YAW轴电机的码盘。绝对式编码器，可以记录电机转动了多少角度。有编码器之后就可以测出底盘相对坐标系和云台相对坐标系的相对角度差（也就是在没有随动时的期望运动方向和实际运动方向之差）。 陀螺仪 &amp; 磁力计 磁力计，安装在云台上，类似指南针，会告诉我们相对于地面来说，云台转了多少角度。获得的角度是云台相对坐标系和空间绝对坐标系的差（也就是我们操作手想让转动云台的期望值）。 底盘 麦克纳姆轮 为了实现全向移动，底盘使用麦克纳姆轮，能实现左右平移，旋转。 麦轮可以实现全向移动，但也不是没有缺点，比如给电机输出同样的力，车子向前的合力只有原来的 1 / 根号 2 。 详细介绍：传送门 控制方法设定 记住以下条件，这些是后文讲控制回路的基础： 云台YAW轴电机固定在底盘上。 云台通过云台YAW轴电机固定在底盘上。 磁力计测的是绝对角度。 码盘测的是相对角度。 图示 蓝色部分为底盘。 红色部分为云台YAW轴电机和码盘。 绿色部分为云台。 黄色部分为IMU（磁力计）。 控制阶段 云台转动操作手通过鼠标或者遥控器发送云台转动角度给定值（云台相对坐标系和空间绝对坐标系的相差角度），云台YAW轴电机转动。 底盘转动底盘跟随云台电机转动，底盘四个电机接受到旋转分量分解值。底盘向云台转动方向转动。 注意：云台是通过云台YAW轴电机固定在底盘上的，底盘转动时，云台由于这个固定关系被带动，偏移了我们的设定值。 云台回转由于云台被底盘带动，IMU检测发现云台没有在我们设定的方向上，于是按与之前相反的方向回转。云台底盘的相对坐标系重合，云台-底盘随动系统完成任务。 说明：这里是将随动的过程单位控制时间无限放大，响应速度无限提升。可以使用这一套方法来理解随动过程，但是实践运动过程中，由于我们控制回路的运行频率非常地高，所以从外面来看，这三个过程是同时完成的，底盘紧紧地跟着云台转动。 鸣谢 感谢鹏哥和阿金学长给我们细心讲解随动原理，虽然鹏哥吐槽我问太多为什么（在219单独问鹏哥原理问了一上午，也是辛苦了）。还要感谢RM的队友们，希望这一年我们可以合作愉快，做出成绩，一起冲进全国赛打进十六强！ Tell me and I will forget. Show me and I will remember. Involve me and I will understand. — Chinese proverb, From Robotics, vision and control, Fundamental Algorithms in MATLAB","categories":[{"name":"Control","slug":"Control","permalink":"http://lonewolferic.github.io/categories/Control/"}],"tags":[{"name":"RoboMaster","slug":"RoboMaster","permalink":"http://lonewolferic.github.io/tags/RoboMaster/"},{"name":"控制","slug":"控制","permalink":"http://lonewolferic.github.io/tags/控制/"}]},{"title":"用c语言实现类","slug":"Implement-class-with-C","date":"2018-08-25T16:00:00.000Z","updated":"2018-09-08T04:21:01.871Z","comments":true,"path":"2018/08/26/Implement-class-with-C/","link":"","permalink":"http://lonewolferic.github.io/2018/08/26/Implement-class-with-C/","excerpt":"","text":"c语言和c++完全就是两种不同的语言。但是c++兼容c，c++最大的特点就是引入了类（Class）。那么如何在c语言中实现类似于c++中类的操作呢？ 实现代码定义结构体 12345678910111213141516171819202122typedef struct PID_Regulator_t&#123; float ref; float fdb; float err[2]; float kp; float ki; float kd; float componentKp; float componentKi; float componentKd; float componentKpMax; float componentKiMax; float componentKdMax; float output; float outputMax; float kp_offset; float ki_offset; float kd_offset; void (*Calc)(struct PID_Regulator_t *pid); void (*Reset)(struct PID_Regulator_t *pid);&#125;PID_Regulator_t; PID计算函数 1234567891011121314151617181920212223void PID_Calc(PID_Regulator_t *pid)&#123; pid-&gt;err[1] = pid-&gt;err[0]; pid-&gt;err[0] = pid-&gt;ref-pid-&gt;fdb; pid-&gt;componentKi += pid-&gt;err[0]; if(pid-&gt;componentKi &lt; -pid-&gt;componentKiMax) &#123; pid-&gt;componentKi = -pid-&gt;componentKiMax; &#125; else if(pid-&gt;componentKi &gt; pid-&gt;componentKiMax) &#123; pid-&gt;componentKi = pid-&gt;componentKiMax; &#125; pid-&gt;output = pid-&gt;kp * pid-&gt;err[0] + pid-&gt;ki *pid-&gt;componentKi + pid-&gt;kp*(pid-&gt;err[0]-pid-&gt;err[1]); if ( pid-&gt;output &gt; pid-&gt;outputMax ) &#123; pid-&gt;output = pid-&gt;outputMax; &#125; else if ( pid-&gt;output &lt; -pid-&gt;outputMax ) &#123; pid-&gt;output = -pid-&gt;outputMax; &#125;&#125; 定义结构体时，将Calc这个函数指针指向void PID_Calc(PID_Regulator_t *pid)这个函数。 12345678910111213141516171819202122#define GIMBAL_MOTOR_PITCH_POSITION_PID_DEFAULT \\&#123;\\ 0,\\ 0,\\ &#123;0,0&#125;,\\ PITCH_POSITION_KP_DEFAULTS,\\ PITCH_POSITION_KI_DEFAULTS,\\ PITCH_POSITION_KD_DEFAULTS,\\ 1,\\ 0,\\ 0,\\ 4900,\\ 1000,\\ 1500,\\ 0,\\ 4900,\\ 30,\\ 0,\\ 0,\\ &amp;PID_Calc,\\ &amp;PID_Reset,\\&#125;\\ 某个函数中调用了这种方式来进行计算PID。 123456789void RammerSpeedPID( int16_t TargetSpeed )&#123; RAMMERSpeedPID.kp = RAMMER_SPEED_KP_DEFAULTS; RAMMERSpeedPID.ki = RAMMER_SPEED_KI_DEFAULTS; RAMMERSpeedPID.kd = RAMMER_SPEED_KD_DEFAULTS; RAMMERSpeedPID.ref = TargetSpeed; RAMMERSpeedPID.fdb = Rammer.speed; RAMMERSpeedPID.Calc(&amp;RAMMERSpeedPID);&#125; 原理函数指针是指向函数的指针变量。函数具有可赋值给指针的物理内存地址，一个函数的函数名就是一个指针，它指向函数的代码。一个函数的地址是该函数的进入点，也是调用函数的地址。将指针指向函数名也就是函数的进入点，就可以达到用指针运行函数的功能。 定义形式： 1类型 （*指针变量名）（参数列表）； 例如： 1int (*p)(int i,int j);","categories":[{"name":"Embedded","slug":"Embedded","permalink":"http://lonewolferic.github.io/categories/Embedded/"}],"tags":[{"name":"C","slug":"C","permalink":"http://lonewolferic.github.io/tags/C/"},{"name":"嵌入式","slug":"嵌入式","permalink":"http://lonewolferic.github.io/tags/嵌入式/"}]},{"title":"当学术不端成为一种风尚......","slug":"When-academic-misconduct-becomes-a-trend","date":"2018-08-11T16:00:00.000Z","updated":"2018-11-06T15:13:11.849Z","comments":true,"path":"2018/08/12/When-academic-misconduct-becomes-a-trend/","link":"","permalink":"http://lonewolferic.github.io/2018/08/12/When-academic-misconduct-becomes-a-trend/","excerpt":"","text":"事因 某川的学生团队又双叒叕获奖了，还上了川大官微，学校各种组织的公众号都在转发他们的事迹。 So？看起来没什么问题：拼命研发-参加比赛-包揽奖项-收获名誉。但是，真相就是这样的吗？ 你以为他们从底层芯片开始研究设计制造，训练神经网络，制作嵌入式系统，制作了智能化的产品。但是其实，他们的整套东西就是淘宝200块买来的，至于嵌入式嘛，是指导老师找人外包做的。别问我为什么知道这些，因为他们的外包是我们做的。 （别问我是哪个团队，本文对事不对人） 爸妈怎么看？ 回家之后，在旅游的路上和爸妈讲了这个，先给他们看了川大官微的报道。然后和他们说了实情 我：他们这个东西其实完全没有写过一行代码，xx是淘宝200块买的（给妈妈看淘宝链接），他们的xx是外包给我们做的。 妈：他们这个东西让评委觉得很厉害了。 我：他们这个东西，别说检测xx的xx了，连检测是不是xx都不行。文章里面说的是通过深度学习方法检测xx，但是其实是淘宝买来的，代码用的都是里面事先烧好的代码。更本没用到他们说的技术。（你告诉我说一个普通嵌入式芯片能跑深度学习？还完全不发热？） 妈：但他们这个得奖了啊，这说明他们的资源整合能力很好，这也是他们的能力。 我：资源整合能力？excuse me？他们是xx学院（工科学院）的人，以后出来是当攻城狮的！攻城狮就是来解决实际问题，提供解决方案的。不是来搞资源整合的，那是商学院的人干的事情。 妈：他们能搞，你们怎么不也去搞一个呢？他们自己找人帮忙做事也是他们的能力。 我：是他们让他们的指导老师找的我们…… So爸妈的意思就是他们“整合”了资源，参加了比赛拿了奖，然后就可以心安理得地将奖状拥入怀中了？靠着淘宝买来的看似高端技术其实低级的产品，披上深度学习的外衣，文案里写上自己完全没有做的技术，拿着外包做的xx。这样的行为还很值得效仿？ 思考 我不知道该说什么好 工科生最重要的品质就是实干精神。面对工程问题，根据自己的理论知识和实践经验，提出可行的方案并实践，与bug为伍，不怕艰辛，只因心存信仰。 这样的团队，完全突破了工科生的底线，通过投机取巧来获取名誉，这就是弄虚作假，学术不端啊！ 指导老师不知道实情吗？肯定知道，为什么放任还帮助他们呢？因为他们得奖，指导老师就可以获得丰厚的奖励。 可笑啊，可笑！ 遥想当年初入川大，开学典礼一结束，就是一个讲学风诚信的讲座。台上的老先生温文尔雅，滔滔不绝，和我们讲做学问要踏实，耐得住寂寞。他举了韩国科学家为了功名利禄宣布自己克隆出人类的科研成果，最后被揭发严惩的例子。台上，讲了一个小时的他也没有停下来的意思，喝了一口水继续给我们强调学术态度端正的重要性。台下，学生听的津津有味，也被老先生对于学术的严谨认真态度所动容，时而掌声雷动。讲座差不多持续了两个小时，没有多少人选择掏出手机消磨时光。校长的致辞一个字都没有记住，但是老先生的音容笑貌却历历在目。 可是现在呢？出于功利心的考虑，人人为了能在综评，保研的时候能够加分，不惜弄虚作假-找外面的人给钱做，拿别人做好的东西说是自己的。校级奖状可以加x分，省级可以加x分，国际级奖项可以加x分。 学生出于功利心造假还不是最可怕的。可怕的是这个学校这个体制鼓励你作假！我不管你是怎么样的，只要拿奖了，我就支持你，给你加分，报道你的”丰功伟绩“，给你拨经费（川大创新创业浮夸风就是这么来的）。作假的学生拿了奖励，好好干活的学生却什么都没得到，难免心里不平衡。整个学院，整个学校都在告诉你拿奖才是最重要的，至于怎么得来的，没有人关心。学生造假拿奖，指导老师还可以收获不小的奖励，于时老师也对学生的学术不端造假行为睁一只眼闭一只眼。 爸妈的态度更是让我震惊！不仅没有对于他们作假的行为表示谴责，还赞扬了他们所谓的“资源整合能力”。为了拿奖，我们甚至可以抛下道德准则于不顾。只是为了在保研加分项里多能上那么一两分。 如果中国的每一个工程师都来搞“资源整合”，那么谁来做研发，中国未来的科技将由谁来推动？中华民族的伟大复兴讲如何实现？ 那颗芯片，你们忘了吗！？ 2003年，上海交通大学微电子学院院长陈进宣称研发了自主芯片“汉芯一号”，但其实只是将摩托罗拉芯片抹掉了logo。“汉芯造假”事件成为中国科研史上最大的“丑闻”之一。 “汉芯”事件，中国现代科研史最大的黑点。 “汉芯”事件，中国科研人心里永远的痛，“汉芯”一出，破灭了中国人民对于我国在高新科技领域有重大突破的梦想。从此中国不敢在芯片领域有所重大研究投入，只怕“汉芯”再现！ 仔细想想，”汉芯“为什么能祸起萧墙，也许就是大学时：“嘿，你把摩托罗拉的芯片拿过来，写上你的名字去参加比赛，报告书就写用你深度学习方法对芯片你内部进行设计评估，参加xxx比赛，准能获奖，这样保研加分全都有了，说不定科协还会报道我们呢！” 千里之堤，毁于蚁穴 华夏之才，毁于造假 勿以善小而不为，勿以恶小而为之 也许汉芯事件就这这样来的吧。 不知道下一个汉芯将会是谁？ 后记 嗯嗯，就在我这篇文章写完后不到两天，下一个“汉芯”出场了，不过这次改的是姓——“红芯” “红芯事件” 让我细思极恐的是，“红芯”浏览器刚开始宣传的时候说自己是研发了世界上第五个浏览器内核，而现在却又承认是基于Chrome的项目。从学术角度来讲，石锤是学术不端行为了。但是这些学术不端行为在商业界不但没有受到处罚，还融到了2.5个亿！而且现在还活的好好的。 也不知道该如何结束这个沉重的话题，只希望当我们踏入社会的时候，依然能够像现在这样，不向造假势力妥协。 Never compromise ——Rorschach 后后记2018.11.6日更新 上课的时候，脑子一抽，突然想到了这个问题：M公司真的不知道这个技术完全不可能实现吗？他们真的不知道他们在造假吗？他们真的不知道他们把奖分给了一圈学术骗子吗？答案是否定的，作为全国五百强公司，举办一个比赛不会请这样不专业的评委，评委也不会真的什么都不知道，什么都看不见。那到底为什么要这样给一群骗子颁奖呢？设想一种可能：xxxx团队的xxxx作品是基于M公司的A产品开发的（比赛如此要求，但是其实前文也告诉你了，根本没有用这个产品进行深度学习）。M公司举办这个比赛终究是为了自己的利益，利益的一方面就是推广A产品。日后在宣传这个比赛的时候，别人会看到：xxxx团队使用A产品，开发了xxxx。然后就觉得A产品很厉害，就会去购买。M公司给一个造假的作品戴上王冠不会有任何损失，反而可以增加A产品的销量。这样一想，细思极恐……","categories":[{"name":"Life","slug":"Life","permalink":"http://lonewolferic.github.io/categories/Life/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://lonewolferic.github.io/tags/杂谈/"},{"name":"评论","slug":"评论","permalink":"http://lonewolferic.github.io/tags/评论/"}]},{"title":"《数电》学习总结","slug":"Digitial-circuit-learning-summary","date":"2018-08-01T16:00:00.000Z","updated":"2018-09-25T20:11:28.385Z","comments":true,"path":"2018/08/02/Digitial-circuit-learning-summary/","link":"","permalink":"http://lonewolferic.github.io/2018/08/02/Digitial-circuit-learning-summary/","excerpt":"","text":"数电是一门专业基础课，讲的是数字电路，所以在数电的世界里只有0和1。数电的直接应用是FPGA，而我认为数电更像是一门为其他课程打基础的课程。比如数电的直接服务对象——微机原理。数电本身的一些东西学了之后只是知道了有这么一个东西，但是在微机原理中，你会看到这些数字电路的直接使用，为他们的奇妙作用而惊叹。当然啦，对于外人来说，感觉这个世界还有自己的电脑竟然全是靠着这些0，1来构成的，感觉非常的神奇@曾某。 数制 &amp; 逻辑代数 二进制，八进制，十进制，十六进制。用的最多的就是十六进制和十进制。BCD码更像是表示码，有点c语言中char的感觉哈哈。 数电引入了逻辑代数，在简单的电路分析中会感觉逻辑代数很累赘，不如自己直接分析逻辑来的舒服。但是，一门学科要成为科学，就必定要用数学公式来表达一切。在复杂的数字电路中，逻辑表达式在电路分析方面显得极其有用。 逻辑代数中还告诉我们有很多种方法来表达一个数字电路的输入输出关系。 真值表：枚举所有可能情况，主要用于设计电路的时候使用。 逻辑表达式：数学公式表达结果，主要用于正向运算。 卡诺图：用于简化逻辑表达式。 波形图：常用于表示时序，主要用在异步时序电路中。 基本逻辑门电路 主要的制作材料为TTL和COMOS。BJT，MOS工作于截至区和饱和区。 特殊的门电路 传输门 控制门两端是否相连，双向导通。 OD门 需要外接电阻和电源，最大的特点是可以实现线与功能。 三态门 通过EN来控制门是否工作，工作时单向导通，不工作时高阻。主要用于微机中的总线接口处。 门电路关心的参数 电平匹配 噪声容限 传输延时（多级联的时候竞争冒险很严重） 扇入扇出数：能带动多少门。（带载能力） 组合逻辑电路 编码器，译码器，数据选择器，数值比较器，运算电路（半加器，全加器，超前进位加法器） 主要功能每个电路都各有各的特点，在微机中用的最多的就是译码器，用于选中AB上选择的外设。 组合电路里主要的计算就是依靠逻辑表达式了，感受到了数学公式的强大和巧妙之处，我们没有必要推每一个门电路的输入输出状态再推到最终输出，直接依靠数学公式就可以解决了。 时序逻辑电路 为什么叫时序电路呢？主要就是引入了时序电路的基本单元——触发器。 锁存器 &amp; 触发器 锁存器 锁存器由双稳态电路组成，中间用E做控制电路，控制使能，一般来说在E为高电平的时候使能。触发器能“记忆”前一个状态，主要功劳就是双稳态电路，双稳态电路是一种将输出引回到输入端的电路，达到稳态效果。 触发器 触发器基本电路由两个锁存器组成，外部特性就是触发器对上升下降沿敏感，而锁存器对高低电平敏感。 锁存器具体怎么组成触发器的呢？大致的原理就是两个级联，电平信号在两个触发器只有在高低电平转换的一瞬间可以同时使能一下。简单来说就是……趁锁存器不注意给他信号。 时序电路设计和分析时序电路分为同步和异步时序电路，主要区别在于电路中所有的触发器的时钟信号是不是同一个。 同步时序电路分析主要通过激励方程，触发器特性方程（状态方程）来得到输出方程。分析还是比较容易的，因为有数学公式。 设计呢主要就是逆向设计了，根据要求画出真值表，简化状态，编码，选择触发器，最后检查自启动。 异步时序电路异步时序电路的分析一般来说分析都是使用时序波形图来分析，因为时钟公式不一样，这样运用逻辑表达式来计算的时候就不是很方便。 存储器 按材质分分为DRAM和SRAM。 DRAM由于是用电容来储存的，电容会漏电，所以需要刷新（读出数据之后再把数据写入）。 还有一个学到的东西就是，终于知道为什么金条上的RAM芯片是8个了——8个数据位，为了并行读取数据。 FPGA 不算是考试学习的重点，但是了解下还是挺有意思的。 FPGA（Field－Programmable Gate Array），即现场可编程门阵列。编程之后的效果就是能够在FPGA内部产生大量的门电路。 FPGA最大的特点就是他是使用门电路来实现功能的。程序的运行是跟着时钟频率走的。反观单片机，作为一个微机，单片机所有的数据处理都由CPU来处理，为了能实现一些操作的并发执行，还要分时间片处理每一个进程。从实质上来讲，算是”假“的并发执行。然而FPGA，由于所有的门电路操作都是由时钟驱动的，达到了真正的并发执行。这就是FPGA厉害的地方——强大的并发执行能力。难怪现在说的硬件人工智能化都是在说FPGA。 波形产生电路 主要就是555定时器组成单稳态触发器、施密特触发器和多谐振荡器。","categories":[{"name":"Course","slug":"Course","permalink":"http://lonewolferic.github.io/categories/Course/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://lonewolferic.github.io/tags/学习/"},{"name":"电路","slug":"电路","permalink":"http://lonewolferic.github.io/tags/电路/"}]},{"title":"《计算机网络与通信》学习总结","slug":"Computer-network-learning-summary","date":"2018-07-31T16:00:00.000Z","updated":"2018-09-25T20:11:28.389Z","comments":true,"path":"2018/08/01/Computer-network-learning-summary/","link":"","permalink":"http://lonewolferic.github.io/2018/08/01/Computer-network-learning-summary/","excerpt":"","text":"自动化专业的计网给我的感觉是一种科普性质的课程，对于层次概念的要求比较高，对于实践不及计算机专业。（计算机专业要求他们根据所学知识设计底层的通信程序） 绪论网络的核心是由路由器构成的网，网络的边缘才是我们这些上网的终端。 网络通信里面有个很好玩的两军问题，这个思想实验说明了在不可靠通信链路上面试图通过通信达到一致是非常困难的。 数据包传输方式 电路交换：连接实际的电路，传输信息 分组交换：将大的数据包拆分成较小的部分，加上报文头部组成报文。 延迟网络的四种延迟： nodal processing delay queueing delay（玩游戏的时候卡主要就是他） transmission delay propagation delay 五层网络模型 应用层HTTP喜闻乐见的网页服务 stateless：服务器不保留任何访问过的请求信息，cookie才保留访问请求信息。chrome F12 network就可以看到server向我们要了那些cookie数据。 FTP传输文件 E-mail SMTP 主要用于发邮件，因为这个协议需要两方同时在场，如果那他来收邮件就会出现不登陆没法收邮件的情况。 POP3 用于收邮件，可以下载邮件，但是是单向的，客户端操作无法对服务器端产生影响。 IMAP 相比POP3增加了双向通道，客户端操作可以同步到服务器端。 DNS 域名解析，将网址转化为IP地址。 传输层TCP &amp; UDP大名鼎鼎的TCP/IP TCP面向连接，可靠的数据传输，但是因此传输速度远不及UDP。 UDP是尽力而为的传输方式，有数据包丢失，但是速度快，用于容忍数据包丢失的场合。 RDT解释了TCP是如何一步步来的。从完全可靠的数据传输链路出发，一步步认为每一个地方都具有可能是不可靠的。最后形成了最终的模型。 网络层IP主要就是子网划分：一般的ip都是定死的8的整数倍是网络号，剩下的都是主机号，这样想要组一个子网就会造成ip地址的大量浪费，于时出现子网分割来让我们的网络更加合理地应用。 Routing algorithms Link State 全局感知，算法有点动态规划的感觉。（好像就是动态规划） Distance Vector局部感知，只知道和自己相连的路由器的情况，每次算路径通过与自己相连的路由器交换路由表来获取最短路径。 链路层 &amp; 物理层网路层用IP地址来表示一个终端的身份，而链路层用的是MAC地址。 CSMA/CD (Collision Detection，冲突检测) 交换机 &amp; 集线器：交换机能分割广播域，而集线器只是单纯地将总线相连。 其他学了计网之后了解了IP到底是啥？为啥要装路由器？还有就是知道了WLAN和WIFI的区别，一个是虚拟局域网，一个是实现它的协议。","categories":[{"name":"Course","slug":"Course","permalink":"http://lonewolferic.github.io/categories/Course/"}],"tags":[{"name":"总结","slug":"总结","permalink":"http://lonewolferic.github.io/tags/总结/"},{"name":"学习","slug":"学习","permalink":"http://lonewolferic.github.io/tags/学习/"},{"name":"网络","slug":"网络","permalink":"http://lonewolferic.github.io/tags/网络/"}]},{"title":"学傻了的对话（不定时更新）","slug":"study-to-death","date":"2018-06-30T16:00:00.000Z","updated":"2018-09-02T14:35:42.303Z","comments":true,"path":"2018/07/01/study-to-death/","link":"","permalink":"http://lonewolferic.github.io/2018/07/01/study-to-death/","excerpt":"","text":"芝士就是力量！ 和张大仙一起去校外吃铁板烧，他先把选好的菜给老板，我后给，结果我的铁板烧先烧好。 张：为什么你在我之后给的，结果先烧好了？ 我：也许他们是用堆栈烧饭的吧！ 高大佬又双叒叕在说自己要学不完了 （空间） 我：我也要学不完了 高：大佬说笑了，你们各个都考的比我高 我：上学期成绩谁好你心里有点ACD数 高：上学期关这学期什么事 我：你以为你是非因果系统啊！（这里其实说错了，暴露学渣本质了……） 詹：因果LTI 我：不对这个应该是记忆系统……","categories":[{"name":"Others","slug":"Others","permalink":"http://lonewolferic.github.io/categories/Others/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://lonewolferic.github.io/tags/杂谈/"}]},{"title":"关于单片机初始化的注意事项","slug":"a-bug-about-microcontroller-initalization","date":"2018-06-16T16:00:00.000Z","updated":"2018-09-25T20:11:28.385Z","comments":true,"path":"2018/06/17/a-bug-about-microcontroller-initalization/","link":"","permalink":"http://lonewolferic.github.io/2018/06/17/a-bug-about-microcontroller-initalization/","excerpt":"","text":"为了让单片机完成我们所需的功能，我们每次都会使用到很多的外设，并且在控制系统中，为了保证控制的时效性，有一个专门的定时器来产生中断，进入控制环——controlloop，在主函数的循环中则放入不痛不痒的程序——led闪烁之类的。一个标准的单片机程序流程为：初始化各个外设，进入while(1)循环，定时器定时产生中断，在中断中，完成控制任务，回到while(1)，再进入下一个中断，解算姿态……以此循环往复。（本程序中TIM14产生定时中断） 在外设数量较多，并有可能又要添加新外设的情况下，我们通常使用BSP（board support package ，板级支持包 ）来管理外设。主要的好处是不用每次添加新外设的时候在每个外设的程序前面去包含新的外设头文件。 所以我们的程序一般就变成了这样。 bsp_Init中初始化全部外设。 这看起来是一个没问题的程序，但是实际运行的时候，却跑不起来。 BUG在哪里呢？bug在于初始化的顺序，以上面的程序为例，运行之后发现程序卡住了，进入debug发现程序卡死在这里，这是干什么用的呢？printf的发送程序，等待发送完成的信号。为什么没等到发送完成呢？因为串口都还没初始化啊！ 正常的程序，运行流程图应该是这样的： 这个错误的程序，运行流程图是这样的：（外设2依然会初始化完成，但在如果在还没初始化完成的时候就进入中断，就会出现问题） 问题出现在，控制程序controlloop是肯定要用到外设的——串口，ADC之类的。如果过早进入定时器中断，外设还未初始化完成，就会出现程序轮询一直等相应的情况——等待串口数据发送完成，等待ADC采样完成（程序卡死一般都是因为while(xx == 1)这句等待而导致的）。但是其实根本没法完成，因为这些还没开机初始化呢。 所以，在单片机程序中，产生定时器定时中断的timer必须放在最后初始化。如下图所示：","categories":[{"name":"Embedded","slug":"Embedded","permalink":"http://lonewolferic.github.io/categories/Embedded/"}],"tags":[{"name":"嵌入式","slug":"嵌入式","permalink":"http://lonewolferic.github.io/tags/嵌入式/"}]},{"title":"纪念第一次参加技术类比赛：船模大赛","slug":"my-first-model-boat-race","date":"2018-05-15T16:00:00.000Z","updated":"2018-09-25T20:11:28.385Z","comments":true,"path":"2018/05/16/my-first-model-boat-race/","link":"","permalink":"http://lonewolferic.github.io/2018/05/16/my-first-model-boat-race/","excerpt":"","text":"做个船模比赛心好累 前期调试 比赛前三周开始调模块，主控芯片采用stm32f407，通讯采用蓝牙串口模块，没用24L01的原因是……没调出来；电机采用2212无刷电机。不得不说，在所有的模块调试里面，通讯是最麻烦的：电机、舵机、两路ADC花了半天就调好了，通讯调了一天半。 看似把模块组合在一起很简单，但这就是硬件玄学的地方。 初赛 爆肝调船！由于之前没有调过无刷电机（抱歉菜到大家了），一直不知道怎么对频。还是靠着电子科技园的陈大佬带我学会了对频。整个船差不多多能跑起来已经是比赛前一天下午了。但是还是有bug-通讯卡死问题。 bug没调完，那怎么办呢？当然是熬夜爆肝调啦！ 收拾下桌子开始干活！ 不得不说，ddl是第一生产力，一个晚上让船的电机舵机联调成功，使用暴力手段解决了通讯卡死问题，调完了一套备用的蓝牙串口模块（HC-12） 然而……第二天比赛却因为下雨而推迟了一天…….迟了一天…….了一天…….一天…….天……. 本来多了一天，以为能让船下水的，结果出现了电机无法调速的bug，在调试的时候把电池电用光了，而且电池被我们榨干用坏了，充不进去电。队友小姐姐就跑出去买电池了。 下水比赛当天才是第一次下水，上午评完外观分（我们的船叫Aurora，嘻嘻），下午我们自己试船（离比赛开始只有4h）。 没做过船模，不了解电机性能，第一次试的时候，舵机初始化的时候是歪的，h2212的动力太大，我自己操作也不熟悉，推动摇杆，船直接飞了出去。船飞到岸上，把自己的肚子撞裂了……（韵阳小姐姐抱起我们的船跑回去修） 简单地用热熔胶糊上了裂口处，我们的船又下水了，为了防止船出bug，我们给船装上了安全绳：当船动不了的时候还可以手动把船拉回来。然后一出船，舵机方向还是没摆正，水中乱绕了几圈之后不动了。这时！安全绳的作用就体现了出来。可是不拉不要紧，一拉，由于船受到的是侧面的力，我们的Aurora直接侧翻倒在了水中…… 翻船了之后我们以最快的速度把船拉了回来（电子元件在通电的情况下进水是大忌！），但还是晚了一步。蓝牙的灯已经不亮了，烧模块了哇！但是我还有前面一次调完的HC-12模块，但当时由于卡死问题更严重，所以没有使用。当时情况紧急，心态有点乱，本来也是有HC-05的，但是AT指令输进去之后没有配对成功，心态爆炸。这时也只能死马当活马医了，换上了新的通讯模块之后，电机不转了…… 电机不转也可以说是电调的问题，本来在设置满油门的时候需要设置初始化，设置完一次之后就不用再设置了，但现在每次掉电之后都需要重新设置油门量程。 H2212实在是太强劲了，就跟脱缰的野马一样，速度太快，完全控制不住。这种比赛比的是稳定性，所以临时换电机，换成了动力较弱的A2212电机。 缝缝补补总算是把下水发现的问题全改了。 赛场 一直没时间去解决的是遥控器的电源问题，为了解决这个问题，本项目组采用了“基于surface pro3的船模遥控系统”。好吧，其实就是用电脑的usb供电。 作为一个操作手，我的练习时间还是太少了，但是我们的船跑的慢啊，按错一个键也没啥关系，往回拉就没事了。初赛只是想苟过去，最后的晋级名单也验证了我的想法－所有跑完赛道的船全都进决赛了。 决赛先是用两块3.7v电池和5v稳压模块解决了遥控器供电的问题（总算不用抱着电脑开船了），然后莫名奇妙的就调好了H2212电机和电调，但是在之后某次调船的时候电调进水烧掉了。 这个时候船主要的问题就是通信，蓝牙通信实在太不稳定，距离太近了，淘宝界面说的500+m都没问题，实际跑起来10m撑死。导致我们调船的时候经常出现船跑到一半停湖中间了，然后我就脱鞋赤脚下去捞…… 电调烧了之后电机和电调就莫名其妙的没法跑了，我也是头铁，不撞南墙不回头。但是无刷电机还是没有调出来。直到赛前一天才打算临时换方案：使用775有刷电机作为动力源，还好配套的联轴器。 实验室里现场改代码，但是一个引脚的pwm波总是出不来，但没有什么好的调试方法–我根本没法知道波形到底出来没有。so我们把电子科技园的示波器搬回了寝室！（最后是发现高级定时器初始化的时候还要对于pwm使能多配置一个东西） 临时改方案当然是要通宵改了，为了防止自己躺床上起不来但又想睡觉只能这样做了： 所以当时下午3点比赛，上午还要进行技术测评，测评完就来到极客邦调，无法解决有刷电机的调速问题，于时用示波器来看去驱动板输出波形，结果不小心探头抖了一下，然后就…… 决赛赛场赛前发现船转向速度有点慢，然后……校园卡就决定是你了！ 由于是临时换的电机，也没有电机固定支架之类的，所以就只能用胶带勉强固定一下。 为了测试电机有没有转反，我和两位小姐姐进了女厕用厕所里洗手盆的水测试转反没有，中途又有另一位小姐姐进来，看到我在里面，那场面…… 开船的时候嘛emmmmm船前半段跑的好好的，结果跑到一半船没法跑了，动了下舵机的功能，发现能动，那就是电机的问题了。喊了船爹妈之后终于是动了起来，但是船就是动一下然后停很久。但最后也总算是跑完了全程。 还有一次重赛的机会，知道船出了问题之后下来立马对船进行抢修，一看驱动板烧了，开始换驱动板，可惜焊锡和驱动板的大端口质量不好也没装上去。 最后发现其实是胶带的锅，胶带固定的不牢，电机转动的时候把胶带卷进去了，然后电机长时间堵转，导致驱动板烧毁。 其他 做了比赛才知道自己有多么的菜，但是反观这个比赛，我们发现基础功能才是最重要的，初赛的时候只要是能跑的船就能进决赛，决赛专业组也是只要跑完全程就能有奖。","categories":[{"name":"Embedded","slug":"Embedded","permalink":"http://lonewolferic.github.io/categories/Embedded/"}],"tags":[{"name":"控制","slug":"控制","permalink":"http://lonewolferic.github.io/tags/控制/"},{"name":"嵌入式","slug":"嵌入式","permalink":"http://lonewolferic.github.io/tags/嵌入式/"},{"name":"比赛","slug":"比赛","permalink":"http://lonewolferic.github.io/tags/比赛/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-04-29T16:00:00.000Z","updated":"2018-09-02T14:33:49.597Z","comments":true,"path":"2018/04/30/hello-world/","link":"","permalink":"http://lonewolferic.github.io/2018/04/30/hello-world/","excerpt":"","text":"个人博客上线啦！ 我是谁?&emsp;&emsp;四川大学电气信息学院的大二本科生，自我介绍什么的，About里面都有 为什么开始写博客?&emsp;&emsp;主要是为了不让自己太颓啦，最近实在是太咸鱼了。开个博客，给自己点动力和压力，摆脱咸鱼的处境 &emsp;&emsp;其次也是想好好记录一下自己的生活，自己做东西的经验，对人生的看法之类的 &emsp;&emsp;还有就是羡慕各位大佬都有自己的网站，羡慕嫉妒恨，所以我也搞一个，哼～ 为什么要叫孤狼?&emsp;&emsp;孤狼，意为桀骜不训，永不低头。向往着真理与正义，却又承受着自我求索的孤寂。独行，却不孤寂；狂野，却又不无情。 &emsp;&emsp;好吧，以上内容皆为扯淡，孤狼的真正含义是这样的：来跟我读：孤(single)狼(dog) &emsp;&emsp;觉得叫“孤狼”不顺口叫“表表”也行 为什么不去开公众号?&emsp;&emsp;如果开了微信公众号，由于爸妈用的都是微信，so～想像一个场景：我爸打开微信，看到自己儿子的公众号又出了一篇新文章，他打开一看，儿子又烧了一块板子，嗯～这次经验总结的很好。然后就转发到自己的朋友圈（日常秀娃）下面的评论区就会出现各种emmmm……你们懂的。尴尬癌都要犯了……. &emsp;&emsp;其实也还有其他原因，YY硕的文章里告诉我们可以去学点html，css，javascript，最好的练习方式就是去帮别人写网站，但……没人要我帮忙写！？那就给自己写过个呗。顺便练练web编程（其实使用jekyll框架 + 模板也没练多少编程，但是！有个个人网站感觉很geek啊！） 其他&emsp;&emsp;更新频率？布吉岛，看心情更新，努力做到一月一更吧 &emsp;&emsp;每篇博文都有评论功能，大家有啥想法可以评论哈，禁止乱膜陆大佬（陆大佬是谁？喵喵瞄？）","categories":[{"name":"Others","slug":"Others","permalink":"http://lonewolferic.github.io/categories/Others/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://lonewolferic.github.io/tags/杂谈/"}]}]}